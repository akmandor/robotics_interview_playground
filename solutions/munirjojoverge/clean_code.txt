&nbsp;1// Copyright © 2020 AlgoExpert, LLC. All rights reserved.2​3#include &lt;vector&gt;4#include &lt;unordered_map&gt;5#include &lt;algorithm&gt;6using namespace std;7​8class AirportNode {9public:10  string airport;11  vector&lt;string&gt; connections;12  bool isReachable;13  vector&lt;string&gt; unreachableConnections;14​15  AirportNode(string airport) {16    this-&gt;airport = airport;17    connections = {};18    isReachable = true;19    unreachableConnections = {};20  }21};22​23unordered_map&lt;string, AirportNode *&gt;24createAirportGraph(vector&lt;string&gt; airports, vector&lt;vector&lt;string&gt;&gt; routes);25vector&lt;AirportNode *&gt;26getUnreachableAirportNodes(unordered_map&lt;string, AirportNode *&gt; airportGraph,27                           vector&lt;string&gt; airports, string startingAirport);28void depthFirstTraverseAirports(29    unordered_map&lt;string, AirportNode *&gt; airportGraph, string airport,30    unordered_map&lt;string, bool&gt; *visitedAirports);31void markUnreachableConnections(32    unordered_map&lt;string, AirportNode *&gt; airportGraph,33    vector&lt;AirportNode *&gt; unreachableAirportNodes);34void depthFirstAddUnreachableConnections(35    unordered_map&lt;string, AirportNode *&gt; airportGraph, string airport,36    vector&lt;string&gt; *unreachableConnections,37    unordered_map&lt;string, bool&gt; *visitedAirports);38int getMinNumberOfNewConnections(39    unordered_map&lt;string, AirportNode *&gt; airportGraph,40    vector&lt;AirportNode *&gt; unreachableAirportNodes);41​42// O(a * (a + r) + a + r + alog(a)) time | O(a + r) space - where a is the43// number of airports and r is the number of routes44int airportConnections(vector&lt;string&gt; airports, vector&lt;vector&lt;string&gt;&gt; routes,45                       string startingAirport) {46  unordered_map&lt;string, AirportNode *&gt; airportGraph =47      createAirportGraph(airports, routes);48  vector&lt;AirportNode *&gt; unreachableAirportNodes =49      getUnreachableAirportNodes(airportGraph, airports, startingAirport);50  markUnreachableConnections(airportGraph, unreachableAirportNodes);51  return getMinNumberOfNewConnections(airportGraph, unreachableAirportNodes);52}53​54// O(a + r) time | O(a + r) space55unordered_map&lt;string, AirportNode *&gt;56createAirportGraph(vector&lt;string&gt; airports, vector&lt;vector&lt;string&gt;&gt; routes) {57  unordered_map&lt;string, AirportNode *&gt; airportGraph = {};58  for (string airport : airports) {59    airportGraph[airport] = new AirportNode(airport);60  }61  for (vector&lt;string&gt; route : routes) {62    string airport = route[0];63    string connection = route[1];64    airportGraph[airport]-&gt;connections.push_back(connection);65  }66  return airportGraph;